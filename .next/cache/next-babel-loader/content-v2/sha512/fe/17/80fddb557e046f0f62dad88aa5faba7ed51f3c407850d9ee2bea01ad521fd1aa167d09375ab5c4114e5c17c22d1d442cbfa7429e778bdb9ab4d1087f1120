{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/zpuckett/Desktop/NextStax/rapid-crowds/src/components/VideoSingle.tsx\",\n    _this = this;\n\nimport { Container } from '../styles/components/VideoSingle';\n\nvar formatNumber = function formatNumber(num) {\n  if (num > 1000 && num < 1000000) {\n    return (num / 1000).toString().slice(0, 3) + 'K';\n  } else if (num > 1000000) {\n    return (num / 1000000).toString().slice(0, 3) + 'M';\n  } else {\n    return num;\n  }\n};\n\nvar VideoSingle = function VideoSingle(_ref) {\n  var title = _ref.title,\n      channel = _ref.channel,\n      tags = _ref.tags,\n      avatar = _ref.avatar,\n      preview = _ref.preview,\n      viewers = _ref.viewers;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://twitch.tv/\".concat(channel),\n      target: \"_blank\",\n      rel: \"noopener nofollow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: preview,\n          alt: \"thumbnail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"LIVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\".concat(formatNumber(viewers), \" viewers\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatar,\n          alt: channel,\n          width: \"50\",\n          height: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            title: title,\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: channel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, _this), tags.map(function (tag, index) {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              children: tag\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = VideoSingle;\nexport default VideoSingle;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoSingle\");","map":{"version":3,"sources":["/Users/zpuckett/Desktop/NextStax/rapid-crowds/src/components/VideoSingle.tsx"],"names":["Container","formatNumber","num","toString","slice","VideoSingle","title","channel","tags","avatar","preview","viewers","map","tag","index"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,kCAA1B;;AAWA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAiB;AACpC,MAAIA,GAAG,GAAG,IAAN,IAAcA,GAAG,GAAG,OAAxB,EAAiC;AAC/B,WAAO,CAACA,GAAG,GAAG,IAAP,EAAaC,QAAb,GAAwBC,KAAxB,CAA8B,CAA9B,EAAiC,CAAjC,IAAsC,GAA7C;AACD,GAFD,MAEO,IAAIF,GAAG,GAAG,OAAV,EAAmB;AACxB,WAAO,CAACA,GAAG,GAAG,OAAP,EAAgBC,QAAhB,GAA2BC,KAA3B,CAAiC,CAAjC,EAAoC,CAApC,IAAyC,GAAhD;AACD,GAFM,MAEA;AACL,WAAOF,GAAP;AACD;AACF,CARD;;AAUA,IAAMG,WAAuC,GAAG,SAA1CA,WAA0C,OAO1C;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,OAKI,QALJA,OAKI;AAAA,MAJJC,IAII,QAJJA,IAII;AAAA,MAHJC,MAGI,QAHJA,MAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,MADJC,OACI,QADJA,OACI;AACJ,sBACE,QAAC,SAAD;AAAA,2BACE;AACE,MAAA,IAAI,8BAAuBJ,OAAvB,CADN;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,GAAG,EAAC,mBAHN;AAAA,8BAKE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEG,OAAV;AAAmB,UAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE;AAAA,8BAAOT,YAAY,CAACU,OAAD,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,eAUE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEF,MAAV;AAAkB,UAAA,GAAG,EAAEF,OAAvB;AAAgC,UAAA,KAAK,EAAC,IAAtC;AAA2C,UAAA,MAAM,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA,kCACE;AAAQ,YAAA,KAAK,EAAED,KAAf;AAAA,sBAAuBA;AAAvB;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA,sBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGGC,IAAI,CAACI,GAAL,CAAS,UAACC,GAAD,EAAMC,KAAN;AAAA,gCACR;AAAA,wBAAmBD;AAAnB,eAAWC,KAAX;AAAA;AAAA;AAAA;AAAA,qBADQ;AAAA,WAAT,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,eAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAyBD,CAjCD;;KAAMT,W;AAmCN,eAAeA,WAAf","sourcesContent":["import { Container } from '../styles/components/VideoSingle';\n\ninterface VideoSingleProps {\n  title: string;\n  channel: string;\n  tags: string[];\n  avatar: string;\n  preview: string;\n  viewers: number;\n}\n\nconst formatNumber = (num: number) => {\n  if (num > 1000 && num < 1000000) {\n    return (num / 1000).toString().slice(0, 3) + 'K';\n  } else if (num > 1000000) {\n    return (num / 1000000).toString().slice(0, 3) + 'M';\n  } else {\n    return num;\n  }\n};\n\nconst VideoSingle: React.FC<VideoSingleProps> = ({\n  title,\n  channel,\n  tags,\n  avatar,\n  preview,\n  viewers,\n}) => {\n  return (\n    <Container>\n      <a\n        href={`https://twitch.tv/${channel}`}\n        target=\"_blank\"\n        rel=\"noopener nofollow\"\n      >\n        <div className=\"video-info\">\n          <img src={preview} alt=\"thumbnail\" />\n          <strong>LIVE</strong>\n          <p>{`${formatNumber(viewers)} viewers`}</p>\n        </div>\n        <div className=\"profile-info\">\n          <img src={avatar} alt={channel} width=\"50\" height=\"50\" />\n          <div>\n            <strong title={title}>{title}</strong>\n            <p>{channel}</p>\n            {tags.map((tag, index) => (\n              <span key={index}>{tag}</span>\n            ))}\n          </div>\n        </div>\n      </a>\n    </Container>\n  );\n};\n\nexport default VideoSingle;\n"]},"metadata":{},"sourceType":"module"}