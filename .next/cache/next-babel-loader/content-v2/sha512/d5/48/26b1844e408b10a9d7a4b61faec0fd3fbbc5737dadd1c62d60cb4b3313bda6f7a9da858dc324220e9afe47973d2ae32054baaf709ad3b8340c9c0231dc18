{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zpuckett/Desktop/NextStax/rapid-crowds/src/components/Button.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Container } from '../styles/components/Button';\n\nconst Button = (_ref) => {\n  let {\n    children,\n    buttonType\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"buttonType\"]);\n\n  return /*#__PURE__*/_jsxDEV(Container, _objectSpread(_objectSpread({\n    buttonType: buttonType\n  }, rest), {}, {\n    children: children\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Button;","map":{"version":3,"sources":["/Users/zpuckett/Desktop/NextStax/rapid-crowds/src/components/Button.tsx"],"names":["Container","Button","children","buttonType","rest"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,6BAA1B;;AAMA,MAAMC,MAA6B,GAAG,UAI3B;AAAA,MAJ4B;AACrCC,IAAAA,QADqC;AAErCC,IAAAA;AAFqC,GAI5B;AAAA,MADNC,IACM;;AACT,sBACE,QAAC,SAAD;AAAW,IAAA,UAAU,EAAED;AAAvB,KAAuCC,IAAvC;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAVD;;AAYA,eAAeD,MAAf","sourcesContent":["import { Container } from '../styles/components/Button';\n\ninterface ButtonProps {\n  buttonType: 'primary' | 'secondary';\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  children,\n  buttonType,\n  ...rest\n}: any) => {\n  return (\n    <Container buttonType={buttonType} {...rest}>\n      {children}\n    </Container>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}