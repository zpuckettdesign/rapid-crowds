{"ast":null,"code":"import _regeneratorRuntime from \"/Users/zpuckett/Desktop/NextStax/rapid-crowds/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/Users/zpuckett/Desktop/NextStax/rapid-crowds/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/zpuckett/Desktop/NextStax/rapid-crowds/src/components/Main.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Container } from '../styles/components/Main';\nimport VideoCarousel from './VideoCarousel';\nimport VideoGroup from './VideoGroup';\n\nvar Main = function Main() {\n  _s();\n\n  var _useState = useState(),\n      data = _useState[0],\n      setData = _useState[1];\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  function getData() {\n    return _getData.apply(this, arguments);\n  }\n\n  function _getData() {\n    _getData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"https://api.twitch.tv/kraken/streams?limit=30&offset=\".concat(Math.floor(Math.random() * 100)), {\n                headers: {\n                  Accept: 'application/vnd.twitchtv.v5+json',\n                  'Client-Id': 'l4ulgpuzjl21kfkklj0k7aycw7ho72o' // this is a \"public\" client-id, i always hide my private keys in a .env file\n\n                }\n              });\n\n            case 2:\n              response = _context.sent;\n              setData(response.data.streams);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getData.apply(this, arguments);\n  }\n\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Twitch Clone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(VideoCarousel, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(VideoGroup, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(VideoGroup, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(VideoGroup, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(VideoGroup, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Main, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/zpuckett/Desktop/NextStax/rapid-crowds/src/components/Main.tsx"],"names":["axios","useEffect","useState","Container","VideoCarousel","VideoGroup","Main","data","setData","getData","get","Math","floor","random","headers","Accept","response","streams"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAsC,cAAtC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAAA,kBACOJ,QAAQ,EADf;AAAA,MACVK,IADU;AAAA,MACJC,OADI;;AAEjBP,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;;AAFiB,WAKFA,OALE;AAAA;AAAA;;AAAA;AAAA,wEAKjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACyBT,KAAK,CAACU,GAAN,gEACmCC,IAAI,CAACC,KAAL,CACtDD,IAAI,CAACE,MAAL,KAAgB,GADsC,CADnC,GAIrB;AACEC,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,MAAM,EAAE,kCADD;AAEP,+BAAa,iCAFN,CAEyC;;AAFzC;AADX,eAJqB,CADzB;;AAAA;AACQC,cAAAA,QADR;AAYER,cAAAA,OAAO,CAACQ,QAAQ,CAACT,IAAT,CAAcU,OAAf,CAAP;;AAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALiB;AAAA;AAAA;;AAoBjB,MAAI,CAACV,IAAL,EAAW;AACT,wBACE,QAAC,SAAD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF;AAQD;;AAED,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,aAHF,eAIE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,aAJF,eAKE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CAxCD;;GAAMD,I;;KAAAA,I;AA0CN,eAAeA,IAAf","sourcesContent":["import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Container } from '../styles/components/Main';\nimport VideoCarousel from './VideoCarousel';\nimport VideoGroup, { DataProps } from './VideoGroup';\n\nconst Main = () => {\n  const [data, setData] = useState<DataProps[]>();\n  useEffect(() => {\n    getData();\n  }, []);\n  async function getData() {\n    const response = await axios.get(\n      `https://api.twitch.tv/kraken/streams?limit=30&offset=${Math.floor(\n        Math.random() * 100,\n      )}`,\n      {\n        headers: {\n          Accept: 'application/vnd.twitchtv.v5+json',\n          'Client-Id': 'l4ulgpuzjl21kfkklj0k7aycw7ho72o', // this is a \"public\" client-id, i always hide my private keys in a .env file\n        },\n      },\n    );\n    setData(response.data.streams);\n  }\n\n  if (!data) {\n    return (\n      <Container>\n        <div className=\"loading-container\">\n          <h1>Twitch Clone</h1>\n          <div className=\"loading\"></div>\n        </div>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <VideoCarousel data={data} />\n      <VideoGroup data={data} />\n      <VideoGroup data={data} />\n      <VideoGroup data={data} />\n      <VideoGroup data={data} />\n    </Container>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}